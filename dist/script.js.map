{"version":3,"sources":["api/index.js","script.js"],"names":["getProjectById","fetch","id","then","data","json","getData","url","cacheStorage","caches","open","add","getCachedData","err","console","log","cachedData","cacheName","cachedResponse","match","ok","deleteOldCaches","currentCache","keys","key","isOurCache","substr","delete","roots","document","querySelectorAll","renderWidget","root","template","integrationName","showBranding","fields","wrapper","createElement","classList","map","row","r","name","indexOf","Number","split","substring","sort","el","el2","order","rowDOM","rowImageWrapper","rowContentWrapper","find","i","length","itemDOM","replace","value","link","linkValue","innerHTML","append","brandingDOM","forEach","styles","dataset","style","setProperty","primaryColor","secondaryColor","templateSlug"],"mappings":"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","file":"script.js","sourceRoot":"..","sourcesContent":["export const getProjectById = async (id) => {\n  // return await getData();\n  return fetch(`${process.env.LAMBDA_ENDPOINT}/projects/data/${id}`)\n    .then((data) => data.json())\n    .then((data) => {\n      return data;\n    });\n};\nasync function getData(url) {\n  const cacheVersion = 1;\n  const cacheName = `embedtables-${cacheVersion}`;\n  try {\n    const cacheStorage = await caches.open(cacheName);\n    await cacheStorage.add(url);\n    const data = await getCachedData(cacheName, url);\n    return data;\n  } catch (err) {\n    console.log(err);\n    const cachedData = await getCachedData(cacheName, url);\n    if (cachedData) {\n      return cachedData;\n    }\n  }\n}\n\n// Get data from the cache.\nasync function getCachedData(cacheName, url) {\n  const cacheStorage = await caches.open(cacheName);\n  const cachedResponse = await cacheStorage.match(url);\n\n  if (!cachedResponse || !cachedResponse.ok) {\n    return false;\n  }\n\n  return await cachedResponse.json();\n}\n\n// Delete any old caches to respect user's disk space.\nasync function deleteOldCaches(currentCache) {\n  const keys = await caches.keys();\n\n  for (const key of keys) {\n    const isOurCache = \"embedtables-\" === key.substr(0, 6);\n\n    if (currentCache === key || !isOurCache) {\n      continue;\n    }\n\n    caches.delete(key);\n  }\n}\n","import { getProjectById } from \"./api\";\n\nconst roots = document.querySelectorAll(\"div[data-embedtableid]\");\n\nfunction renderWidget(root, template, integrationName, showBranding, fields) {\n  const wrapper = document.createElement(\"div\");\n  wrapper.classList.add(template);\n\n  fields.map((row) => {\n    if (integrationName === \"airtable\") {\n      row.map((r) => {\n        if (r.name.indexOf(\"*\") > -1) {\n          r[\"order\"] = Number(r.name.split(\"*\")[0]) || 99;\n          r[\"name\"] = r.name.substring(2);\n        }\n      });\n      row = row.sort((el, el2) => el.order - el2.order);\n      console.log(row);\n    }\n\n    const rowDOM = document.createElement(\"div\");\n    const rowImageWrapper = document.createElement(\"div\");\n    const rowContentWrapper = document.createElement(\"div\");\n    rowDOM.classList.add(\"item\");\n    rowImageWrapper.classList.add(\"item__image\");\n    rowContentWrapper.classList.add(\"item__content\");\n    let buttonText = row.find((el) => el.name == \"Button_text\");\n    let buttonUrl = row.find((el) => el.name == \"Button_url\");\n    for (let i = 0; i < row.length; i++) {\n      let itemDOM = null;\n      itemDOM = document.createElement(\"div\");\n      itemDOM.classList.add(row[i].name.replace(\" \", \"-\"));\n\n      if (row[i].name == \"Button_text\" && row[i].value) {\n        const link = row.find((el) => el.name == \"Button_url\");\n        let linkValue = null;\n        if (link) {\n          linkValue = link.value || \"/\";\n        }\n        itemDOM.innerHTML = `<a href='${linkValue}'>${row[i].value}</a>`;\n        rowContentWrapper.append(itemDOM);\n      } else if (row[i].name == \"Button_url\") {\n        continue;\n      } else if (row[i].name == \"Image_url\") {\n        itemDOM.innerHTML = `<img loading=\"lazy\" src='${row[i].value ||\n          \"https://picsum.photos/300\"}'/>`;\n        rowImageWrapper.append(itemDOM);\n      } else {\n        if (row[i].value === \"TRUE\") {\n          itemDOM.innerHTML = `<img src='/assets/calendar.svg' alt=\"True\" width=\"20px\"/>`;\n        } else if (row[i].value === \"FALSE\") {\n          itemDOM.innerHTML = `<img src='/assets/map.svg' alt=\"False\" width=\"20px\"/>`;\n        } else {\n          itemDOM.innerHTML = `<span>${row[i].value}</span>`;\n        }\n        rowContentWrapper.append(itemDOM);\n      }\n      rowDOM.append(rowImageWrapper);\n      rowDOM.append(rowContentWrapper);\n    }\n    wrapper.append(rowDOM);\n  });\n  root.append(wrapper);\n  if (showBranding) {\n    const brandingDOM = document.createElement(\"div\");\n    brandingDOM.innerHTML = `<div class=\"braning-wrapper\"><span class=\"branding\">Made with </span><a href=\"https://embedtables.com\"><img src=\"https://app.embedtables.com/static/media/logo.8fd74efc.svg\" width=\"20px\" alt=\"embedtables\"/></a></div>`;\n    root.append(brandingDOM);\n  }\n}\nimport styles from \"./et-templates-style.css\";\n\n(async function() {\n  roots.forEach(async function(root) {\n    root.innerHTML += `\n      <style>${styles}</style> \n      `;\n    const data = await getProjectById(root.dataset[\"embedtableid\"]);\n    root.style.setProperty(\"--primary-color\", data.primaryColor);\n    root.style.setProperty(\"--secondary-color\", data.secondaryColor);\n    renderWidget(\n      root,\n      data.templateSlug,\n      data.integrationName,\n      data.showBranding,\n      data.fields\n    );\n  });\n})();\n"]}